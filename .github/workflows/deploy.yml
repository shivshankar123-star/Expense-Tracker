name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # These are not used in this approach because build is on EC2
  NODE_VERSION: '18.x'
  PYTHON_VERSION: '3.10'

permissions:
  contents: read
  deployments: write
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name != 'pull_request'
    environment:
      name: ${{ github.event.inputs.environment || 'staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy Expense Tracker to EC2 using Docker
        env:
          SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_PROJECT_DIR: ${{ secrets.EC2_PROJECT_DIR }}
        run: |
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USER@$EC2_HOST << EOF
            set -e

            echo "Deploying Expense Tracker..."

            # If project dir doesn't exist or no git, clone fresh
            if [ ! -d "$EC2_PROJECT_DIR/.git" ]; then
              echo "Cloning repository..."
              rm -rf "$EC2_PROJECT_DIR"
              git clone https://github.com/shivshankar123-star/Expense-Tracker.git "$EC2_PROJECT_DIR"
            fi

            cd "$EC2_PROJECT_DIR"

            echo "Pulling latest changes..."
            git reset --hard
            git clean -fd
            git pull origin main

            echo "Building Docker image..."
            docker-compose down || true
            docker-compose build --no-cache

            echo "Starting containers..."
            docker-compose up -d

            echo "Deployment complete."
          EOF

      - name: Cleanup SSH key
        run: rm -f key.pem
